---
alwaysApply: false
---

# ============================================

# RULE: document_flow.mdx

# PURPOSE: Generate or update flow documentation inside `docs/flows/`

# AUTHOR: Bryant Caballero

# LAST UPDATED: 2025-10-21

# ============================================

name: document_flow
description: >
Automatically generates clear, junior-friendly documentation for a given application flow.
This rule takes an entry point file or directory and analyzes the entire flow (imports, calls, side effects),
producing a structured `.mdx` documentation file following SaaS Starter documentation standards.
Designed to maintain consistency, clarity, and simplicity for future maintainers.

inputs:
entry_point:
description: The path to the main file or folder of the flow (e.g. src/app/api/auth)
required: true

run: |
Analyze the provided entry point deeply.
Traverse all relevant files involved in the flow (controllers, services, utils, external integrations, etc.).
Summarize each step of the logic and how data flows across layers.

Then, generate or update a documentation file at:
`docs/flows/<FlowName>.mdx`

Use the following structure and standards:

---

title: <FlowName> Flow
description: End-to-end explanation of the <FlowName> flow
lastUpdated: {{current_date}}

---

## Overview

Explain what this flow does, why it exists, and which problem it solves.
Keep it clear and easy to read for junior developers.

**Main Libraries/Services:**

- List external libraries, APIs, and internal modules used (with brief purpose)

## File Map

Show all files involved with short descriptions of their responsibilities.
Example:

src/app/api/auth/[...nextauth]/route.ts – main entry point for NextAuth.js handlers
src/lib/auth/config.ts – defines provider configurations
src/lib/db/prisma.ts – database connection

## Step-by-Step Flow

Explain the data flow from request to response, clearly and linearly.
Include sub-sections if there are multiple subflows, like:

- OAuth Flow (Google, GitHub)
- Magic Link Flow
- Session Management

## Data Flow Diagram

Include a Mermaid diagram describing the logical flow:

flowchart TD
A[User Action] --> B[API Endpoint]
B --> C[Service or Library]
C --> D[Database]
D --> E[Response to User]

## Dependencies & Contracts

List main types/interfaces involved, with a short description.
Example:

- `AuthUser`: Represents a logged-in user session.
- `SessionToken`: Token used to authenticate API calls.

## Known Limitations

Document any technical or functional limitations currently in place.

## Notes & TODOs

Add actionable TODOs and, if possible, link to issues in GitHub or Trello.

---

Output must be **fully formatted MDX**, human-readable, and free of internal reasoning.
The language must always be **English**, concise, and technically accurate.

The resulting file must feel like:

- A human wrote it.
- It’s educational for junior developers.
- It respects SaaS Starter’s clarity and maintainability principles.

example_usage: |
/document_flow entry_point="src/app/api/auth"
